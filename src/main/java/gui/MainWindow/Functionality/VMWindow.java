package gui.MainWindow.Functionality;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import vSphere.ManagedEntityWrapper;
import gui.MainWindow.MainGUI;

import java.awt.event.*;
import javax.swing.*;
import java.awt.*;

/**
 *  Singleton class, responsible for performing all essential functions
 *  for managing Virtual Machines
 */
public class VMWindow extends JFrame {
    private static VMWindow instance;
    private JPanel vmPanel;
    private JButton snapshotButton;
    private JButton stopButton;
    private JButton startButton;
    private JLabel VMPowerStatus;
    private JButton refreshButton;
    private JLabel VMGuestName;

    public static VMWindow getInstance() {
        if (instance == null) {
            instance = new VMWindow();
        }

        return instance;
    }

    public JPanel getPanel(ManagedEntityWrapper selectedItem) {
        updateInfo(selectedItem);
        return vmPanel;
    }

    private VMWindow() {
        super();

        stopButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                mew.shutdownVM();
                updateInfo(mew);
            }
        });
        startButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                mew.startVM();
                updateInfo(mew);
            }
        });
        snapshotButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                mew.snapshotVM("", "");
                updateInfo(mew);
            }
        });
        refreshButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                updateInfo(mew);
            }
        });
    }

    private void updateInfo(ManagedEntityWrapper selectedItem) {
        if (selectedItem.isVMPoweredOn()) {
            VMPowerStatus.setText("Virtual Machine Status: Running");
        } else {
            VMPowerStatus.setText("Virtual Machine Status: Stopped");
        }

        VMGuestName.setText("Virtual Machine Guest Name: " + selectedItem.getVMGuestName());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        vmPanel = new JPanel();
        vmPanel.setLayout(new GridLayoutManager(6, 1, new Insets(0, 0, 0, 0), -1, -1));
        Font vmPanelFont = this.$$$getFont$$$(null, -1, 14, vmPanel.getFont());
        if (vmPanelFont != null) vmPanel.setFont(vmPanelFont);
        snapshotButton = new JButton();
        Font snapshotButtonFont = this.$$$getFont$$$(null, -1, 14, snapshotButton.getFont());
        if (snapshotButtonFont != null) snapshotButton.setFont(snapshotButtonFont);
        snapshotButton.setText("Snapshot");
        vmPanel.add(snapshotButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        stopButton = new JButton();
        Font stopButtonFont = this.$$$getFont$$$(null, -1, 14, stopButton.getFont());
        if (stopButtonFont != null) stopButton.setFont(stopButtonFont);
        stopButton.setText("Stop");
        vmPanel.add(stopButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        startButton = new JButton();
        Font startButtonFont = this.$$$getFont$$$(null, -1, 14, startButton.getFont());
        if (startButtonFont != null) startButton.setFont(startButtonFont);
        startButton.setText("Start");
        vmPanel.add(startButton, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        VMPowerStatus = new JLabel();
        Font VMPowerStatusFont = this.$$$getFont$$$(null, -1, 14, VMPowerStatus.getFont());
        if (VMPowerStatusFont != null) VMPowerStatus.setFont(VMPowerStatusFont);
        VMPowerStatus.setText("Virtual Machine Status:");
        vmPanel.add(VMPowerStatus, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        refreshButton = new JButton();
        refreshButton.setEnabled(true);
        Font refreshButtonFont = this.$$$getFont$$$(null, -1, 14, refreshButton.getFont());
        if (refreshButtonFont != null) refreshButton.setFont(refreshButtonFont);
        refreshButton.setIcon(new ImageIcon(getClass().getResource("/gtk_refresh.png")));
        refreshButton.setText("");
        vmPanel.add(refreshButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        VMGuestName = new JLabel();
        Font VMGuestNameFont = this.$$$getFont$$$(null, -1, 14, VMGuestName.getFont());
        if (VMGuestNameFont != null) VMGuestName.setFont(VMGuestNameFont);
        VMGuestName.setText("Virtual Machine Guest Name:");
        vmPanel.add(VMGuestName, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return vmPanel;
    }
}
