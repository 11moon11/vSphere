package gui.MainWindow.Functionality;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import gui.MainWindow.MainGUI;
import vSphere.ManagedEntityWrapper;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class FolderWindow extends JFrame {
    private static FolderWindow instance;
    private JPanel folderPanel;
    private JButton snapshotButton;
    private JButton stopButton;
    private JButton startButton;

    public static FolderWindow getInstance() {
        if (instance == null) {
            instance = new FolderWindow();
        }

        return instance;
    }

    public JPanel getPanel() {
        return folderPanel;
    }

    private FolderWindow() {
        super();
        stopButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                mew.shutdownVM();
            }
        });
        startButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                super.mouseReleased(e);
                ManagedEntityWrapper mew = MainGUI.getInsatnce().getSelectedItem();
                mew.startVM();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        folderPanel = new JPanel();
        folderPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        Font folderPanelFont = this.$$$getFont$$$(null, -1, 14, folderPanel.getFont());
        if (folderPanelFont != null) folderPanel.setFont(folderPanelFont);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 14, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("This is a Folder Window");
        folderPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        snapshotButton = new JButton();
        Font snapshotButtonFont = this.$$$getFont$$$(null, -1, 14, snapshotButton.getFont());
        if (snapshotButtonFont != null) snapshotButton.setFont(snapshotButtonFont);
        snapshotButton.setText("Snapshot");
        folderPanel.add(snapshotButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        stopButton = new JButton();
        Font stopButtonFont = this.$$$getFont$$$(null, -1, 14, stopButton.getFont());
        if (stopButtonFont != null) stopButton.setFont(stopButtonFont);
        stopButton.setText("Stop");
        folderPanel.add(stopButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        startButton = new JButton();
        Font startButtonFont = this.$$$getFont$$$(null, -1, 14, startButton.getFont());
        if (startButtonFont != null) startButton.setFont(startButtonFont);
        startButton.setText("Start");
        folderPanel.add(startButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return folderPanel;
    }
}
